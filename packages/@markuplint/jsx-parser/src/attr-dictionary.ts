/**
 * @see https://reactjs.org/docs/dom-elements.html#all-supported-html-attributes
 * @see https://github.com/facebook/react/blob/master/packages/react-dom/src/shared/possibleStandardNames.js
 */
export const attrs = [
	'accept',
	'acceptCharset',
	'accessKey',
	'action',
	'allowFullScreen',
	'alt',
	'as',
	'async',
	'autoCapitalize',
	'autoComplete',
	'autoCorrect',
	'autoFocus',
	'autoPlay',
	'autoSave',
	'capture',
	'cellPadding',
	'cellSpacing',
	'challenge',
	'charSet',
	'checked',
	'cite',
	'classID',
	'className',
	'cols',
	'colSpan',
	'content',
	'contentEditable',
	'contextMenu',
	'controls',
	'controlsList',
	'coords',
	'crossOrigin',
	'data',
	'dateTime',
	'default',
	'defer',
	'dir',
	'disabled',
	'disablePictureInPicture',
	'disableRemotePlayback',
	'download',
	'draggable',
	'encType',
	'enterKeyHint',
	'form',
	'formMethod',
	'formAction',
	'formEncType',
	'formNoValidate',
	'formTarget',
	'frameBorder',
	'headers',
	'height',
	'hidden',
	'high',
	'href',
	'hrefLang',
	'htmlFor',
	'httpEquiv',
	'icon',
	'id',
	'inputMode',
	'integrity',
	'is',
	'itemID',
	'itemProp',
	'itemRef',
	'itemScope',
	'itemType',
	'keyParams',
	'keyType',
	'kind',
	'label',
	'lang',
	'list',
	'loop',
	'low',
	'manifest',
	'marginWidth',
	'marginHeight',
	'max',
	'maxLength',
	'media',
	'mediaGroup',
	'method',
	'min',
	'minLength',
	'multiple',
	'muted',
	'name',
	'noModule',
	'nonce',
	'noValidate',
	'open',
	'optimum',
	'pattern',
	'placeholder',
	'playsInline',
	'poster',
	'preload',
	'profile',
	'radioGroup',
	'readOnly',
	'referrerPolicy',
	'rel',
	'required',
	'reversed',
	'role',
	'rows',
	'rowSpan',
	'sandbox',
	'scope',
	'scoped',
	'scrolling',
	'seamless',
	'selected',
	'shape',
	'size',
	'sizes',
	'span',
	'spellCheck',
	'src',
	'srcDoc',
	'srcLang',
	'srcSet',
	'start',
	'step',
	'style',
	'summary',
	'tabIndex',
	'target',
	'title',
	'type',
	'useMap',
	'value',
	'width',
	'wmode',
	'wrap',
];

export const invalidAttrs = attrs
	.map(attr => {
		const invalidAttr = attr.toLowerCase();
		if (invalidAttr === attr) {
			return null;
		}
		return invalidAttr;
	})
	.filter((s): s is string => !!s);
