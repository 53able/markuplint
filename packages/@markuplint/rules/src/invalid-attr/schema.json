{
	"$schema": "http://json-schema.org/draft-07/schema#",
	"_category": "validation",
	"definitions": {
		"value": {
			"type": "boolean"
		},
		"options": {
			"type": "object",
			"additionalProperties": false,
			"properties": {
				"attrs": {
					"type": "object",
					"additionalProperties": {
						"type": "object",
						"oneOf": [
							{
								"type": "object",
								"additionalProperties": false,
								"required": ["enum"],
								"properties": {
									"enum": {
										"type": "array",
										"uniqueItems": true,
										"items": {
											"type": "string",
											"minimum": 1
										}
									}
								}
							},
							{
								"type": "object",
								"additionalProperties": false,
								"required": ["pattern"],
								"properties": {
									"pattern": {
										"type": "string"
									}
								}
							},
							{
								"type": "object",
								"additionalProperties": false,
								"required": ["type"],
								"properties": {
									"type": {
										"$ref": "https://raw.githubusercontent.com/markuplint/markuplint/main/packages/%40markuplint/types/types.schema.json#/definitions/type"
									}
								}
							},
							{
								"type": "object",
								"additionalProperties": false,
								"required": ["disallowed"],
								"properties": {
									"disallowed": {
										"type": "boolean"
									}
								}
							}
						]
					},
					"description": "Setting custom rule. Set either `enum`, `pattern`, `type` or `disallowed`.",
					"description:ja": "`enum` `pattern` `type` `disallowed` のいずれかで設定します。"
				},
				"ignoreAttrNamePrefix": {
					"oneOf": [
						{
							"type": "string"
						},
						{
							"type": "array",
							"uniqueItems": true,
							"minItems": 1,
							"items": {
								"type": "string"
							}
						}
					],
					"description": "Set prefixes to exclude special attributes or directives for the library and template engine that do not exist in the HTML specifications.",
					"description:ja": "HTMLの仕様には存在しない、Viewライブラリやテンプレートエンジン固有の属性およびディレクティブを除外するために、プレフィックスを設定します。"
				},
				"allowToAddPropertiesForPretender": {
					"type": "boolean",
					"default": "true",
					"description": "Allow adding properties for a component that pretends to be an HTML native element. The default is `true`. It warns of finding a non-existence attribute if it is set `false` and you use the `pretenders` option.",
					"description:ja": "HTML要素に偽装しているコンポーネントのプロパティを追加できるようにします。デフォルトは`true`です。`pretenders`オプションを使用している場合に`false`に設定されていると、存在しない属性が見つかると警告します。"
				}
			}
		}
	},
	"oneOf": [
		{
			"type": "boolean"
		},
		{
			"$ref": "#/definitions/value"
		},
		{
			"type": "object",
			"additionalProperties": false,
			"properties": {
				"value": { "$ref": "#/definitions/value" },
				"options": { "$ref": "#/definitions/options" },
				"option": { "$ref": "#/definitions/options", "deprecated": true },
				"severity": {
					"$ref": "https://raw.githubusercontent.com/markuplint/markuplint/main/packages/%40markuplint/ml-config/schema.json#/definitions/severity",
					"default": "error"
				},
				"reason": {
					"type": "string"
				}
			}
		}
	]
}
